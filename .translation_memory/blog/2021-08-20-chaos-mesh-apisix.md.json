{
  "source_file_path_relative_to_docusaurus_root": "blog/2021-08-20-chaos-mesh-apisix.md",
  "source_file_content_hash": "3e38174fd8f09264e24a8d2c6bd020900ff9ad1476b3ad2c6f31b2aba6dddd21",
  "segments": [
    {
      "segment_id": "58cfcc64",
      "source_content": "---\nslug: /How-Chaos-Mesh-Helps-Apache-APISIX-Improve-System-Stability\ntitle: 'How Chaos Mesh Helps Apache APISIX Improve System Stability'\nauthors: shuyangwu\nimage: /img/blog/chaos-mesh-apisix.jpeg\ntags: [Chaos Mesh, Chaos Engineering]\n---",
      "source_content_hash": "57bb552bb74e13258040b289a21920d6850d3312ce08aee5ee0cdd8519b944d3",
      "node_type": "yaml",
      "translatable": false,
      "translations": {
        "zh-hant": "@@untranslatable_placeholder_58cfcc64"
      },
      "invalid_translations": {}
    },
    {
      "segment_id": "53eaf0e1",
      "source_content": "![Chaos Mesh helps Apache APISIX improve system stability](/img/blog/chaos-mesh-apisix.jpeg)",
      "source_content_hash": "8bc1b2c8294aeffb90ee8e9712137bcf8dc3d6b8f28d999ad10fe41521f5e20c",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "zh-hant": "![Chaos Mesh 協助 Apache APISIX 提升系統穩定性](/img/blog/chaos-mesh-apisix.jpeg)"
      },
      "invalid_translations": {}
    },
    {
      "segment_id": "8ac585fb",
      "source_content": "[Apache APISIX](https://github.com/apache/apisix) is a cloud-native, high-performance, scaling microservices API gateway. It is one of the Apache Software Foundation's top-level projects and serves hundreds of companies around the world, processing their mission-critical traffic, including finance, the Internet, manufacturing, retail, and operators. Our customers include NASA, the European Union's digital factory, China Mobile, and Tencent.",
      "source_content_hash": "674b4c140a88498909ad55156e83f4f5aa10aa8ad211a730ca641ba3d6574bb8",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "zh-hant": "[Apache APISIX](https://github.com/apache/apisix) 是一個雲原生、高效能、可擴展的微服務 API 閘道器。作為 Apache 軟體基金會的頂級專案，它為全球數百家企業處理關鍵任務流量，涵蓋金融、互聯網、製造、零售和電信營運商等領域。我們的客戶包括 NASA、歐盟數位工廠、中國移動和騰訊。"
      },
      "invalid_translations": {}
    },
    {
      "segment_id": "3e6699f4",
      "source_content": "<!--truncate-->",
      "source_content_hash": "f5cded2aa7e288e395fe4f67f9dabda2281904b2f5358d07302b3aa8be0acdfa",
      "node_type": "comment",
      "translatable": false,
      "translations": {
        "zh-hant": "@@untranslatable_placeholder_3e6699f4"
      },
      "invalid_translations": {}
    },
    {
      "segment_id": "cf898102",
      "source_content": "As our community grows, Apache APISIX's features more frequently interact with external components, making our system more complex and increasing the possibility of errors. To identify potential system failures and build confidence in the production environment, we introduced the concept of Chaos Engineering.",
      "source_content_hash": "6acfc1b1d4847cc86aa29642479a9d6a75ea80659a9b48c2f6f2d26f9f60f2b9",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "zh-hant": "隨著社群發展，Apache APISIX 的功能與外部元件的互動日益頻繁，系統複雜度隨之提升，錯誤發生可能性也隨之增加。為識別潛在系統故障並建立對生產環境的信心，我們引入了混沌工程（Chaos Engineering）概念。"
      },
      "invalid_translations": {}
    },
    {
      "segment_id": "42ad8e83",
      "source_content": "![Apache APISIX architecture](/img/blog/apache-apisix-architecture.jpg)",
      "source_content_hash": "21cd5c48c5a1eca507145a0b554534c1fc45cf78e14fd090eed5a8e41a5537b6",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "zh-hant": "![Apache APISIX 架構](/img/blog/apache-apisix-architecture.jpg)"
      },
      "invalid_translations": {}
    },
    {
      "segment_id": "f6168993",
      "source_content": "In this post, we'll share how we use [Chaos Mesh](https://chaos-mesh.org/) to improve our system stability.",
      "source_content_hash": "e1a1161ffa8bf52444943bae24411dac46ec82b72f78b2414e035333772cfa76",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "zh-hant": "本文將分享我們如何運用 [Chaos Mesh](https://chaos-mesh.org/) 提升系統穩定性。"
      },
      "invalid_translations": {}
    },
    {
      "segment_id": "418617bd",
      "source_content": "## Our pain points",
      "source_content_hash": "e326bebe692af62c058e8624cf59ad73d1307a2f744e68c87f7942c2bed1904a",
      "node_type": "heading",
      "translatable": true,
      "translations": {
        "zh-hant": "## 我們的痛點"
      },
      "invalid_translations": {}
    },
    {
      "segment_id": "2fdadb08",
      "source_content": "Apache APISIX processes tens of billions of requests a day. At that volume level, our users have noticed a couple of issues:",
      "source_content_hash": "b68efbd832a041a65ed09f4ad74a8e09343581c65de62c319f1f13965ab04733",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "zh-hant": "Apache APISIX 每日處理數百億次請求。在此流量規模下，使用者發現了以下問題："
      },
      "invalid_translations": {}
    },
    {
      "segment_id": "ff75e5d8",
      "source_content": "- **Scenario #1:** In Apache APISIX's configuration center, when unexpectedly high network latency occurs between etcd and Apache APISIX, can Apache APISIX still filter and forward traffic normally?",
      "source_content_hash": "433f0e804a0604743bb8216abb2be77586367ea3fd7d8e7fd16e0a98c050d3d8",
      "node_type": "listItem",
      "translatable": true,
      "translations": {
        "zh-hant": "- **情境一：** 在 Apache APISIX 的配置中心，當 etcd 與 Apache APISIX 之間發生意外高網路延遲時，Apache APISIX 是否仍能正常過濾並轉發流量？"
      },
      "invalid_translations": {}
    },
    {
      "segment_id": "cec935ef",
      "source_content": "- **Scenario #2:** When a node in the etcd cluster fails and the cluster can still run normally, an error is reported for the node's interaction with the Apache APISIX admin API.",
      "source_content_hash": "dfc7730497a869704e3054df26bfda64d921b68daeb6e067f13f14d4df6403b1",
      "node_type": "listItem",
      "translatable": true,
      "translations": {
        "zh-hant": "- **情境二：** 當 etcd 集群中某節點故障且集群仍可正常運行時，該節點與 Apache APISIX 管理 API 的互動會報錯。"
      },
      "invalid_translations": {}
    },
    {
      "segment_id": "d9172fa4",
      "source_content": "Although Apache APISIX has covered many scenarios through unit, end-to-end (E2E), and fuzz tests in continuous integration (CI), it has not covered the interaction scenario with external components. If the system behaves abnormally, for example, if the network jitters, a hard disk fails, or a process is killed, can Apache APISIX give appropriate error messages? Can it keep running or restore itself to normal operation?",
      "source_content_hash": "33feabbdd94541e3208460744953a3afecb35c3218576ed99901fd64e3054e0b",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "zh-hant": "儘管 Apache APISIX 透過持續整合（CI）中的單元測試、端到端（E2E）測試和模糊測試覆蓋了多數場景，但仍未涵蓋與外部元件的互動情境。若系統出現異常（如網路抖動、硬碟故障或行程被殺），Apache APISIX 能否給出適當錯誤訊息？能否持續運行或自我恢復至正常狀態？"
      },
      "invalid_translations": {}
    },
    {
      "segment_id": "d06306f7",
      "source_content": "## Why we chose Chaos Mesh",
      "source_content_hash": "8ea611e98a9661163c5d63bac501bc6da2d854657840095b3533c5c5ae90ed28",
      "node_type": "heading",
      "translatable": true,
      "translations": {
        "zh-hant": "## 為何選擇 Chaos Mesh"
      },
      "invalid_translations": {}
    },
    {
      "segment_id": "73ab96a3",
      "source_content": "To test these user scenarios and to discover similar problems before our product goes into production, our community decided to use Chaos Mesh for chaos testing.",
      "source_content_hash": "dace72c23e2810772b8da155479a307fb457db058ad3fe66238b2e4971e128da",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "zh-hant": "為測試這些使用者情境，並在產品上線前發現類似問題，我們的社群決定採用 Chaos Mesh 進行混沌測試。"
      },
      "invalid_translations": {}
    },
    {
      "segment_id": "7499a4e7",
      "source_content": "Chaos Mesh is a cloud-native Chaos Engineering platform that features all-around fault injection methods for complex systems on Kubernetes, covering faults in Pod, the network, file system, and even the kernel. It helps users find weaknesses in the system and ensures that the system can resist out-of-control situations in the production environment.",
      "source_content_hash": "a711b6ac186483e34286bbcb98d0c3be46754c8f86534bc45f151f7637c0ea48",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "zh-hant": "Chaos Mesh 是雲原生的混沌工程平台，提供全方位故障注入方法，涵蓋 Kubernetes 上複雜系統的 Pod、網路、檔案系統乃至核心層級故障。它能協助使用者發掘系統弱點，確保系統在生產環境中能抵禦失控狀況。"
      },
      "invalid_translations": {}
    },
    {
      "segment_id": "517051a7",
      "source_content": "Like Apache APISIX, Chaos Mesh has an active open source community. We know that an active community can ensure stable software use and rapid iteration. This makes Chaos Mesh more attractive.",
      "source_content_hash": "8d511f6d6631a8d4e59d6215d3ca8beed80005c75e203f496e14d246d3f5cee7",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "zh-hant": "與 Apache APISIX 相同，Chaos Mesh 擁有活躍的開源社群。我們深知活躍社群能確保軟體穩定使用與快速迭代，這使得 Chaos Mesh 更具吸引力。"
      },
      "invalid_translations": {}
    },
    {
      "segment_id": "80d9e13c",
      "source_content": "## How we use Chaos Mesh in APISIX",
      "source_content_hash": "c11e6b66ff9a37e213130a3bd3cf38d2c147153b7d41968c7ac8c8607cbe1980",
      "node_type": "heading",
      "translatable": true,
      "translations": {
        "zh-hant": "## 我們如何在 APISIX 運用 Chaos Mesh"
      },
      "invalid_translations": {}
    },
    {
      "segment_id": "33331f27",
      "source_content": "Chaos Engineering has grown beyond simple fault injection and now forms a complete methodology. To create a chaos experiment, we determined what the normal operation or \"steady state\" of our application should be. We then introduced potential problems to see how the system responded. If the problems knocked the application out of its steady state, we fixed them.",
      "source_content_hash": "df2634439c8dc42a85bbbdf5f9c4255636dc624676e67b9d46d0e742ec9b05ff",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "zh-hant": "混沌工程已超越單純的故障注入，發展為完整的方法論。建立混沌實驗時，我們先定義應用程式的正常運作狀態（「穩定狀態」），隨後注入潛在問題以觀察系統反應。若問題導致應用偏離穩定狀態，我們便進行修復。"
      },
      "invalid_translations": {}
    },
    {
      "segment_id": "50746522",
      "source_content": "Now, we'll take the two scenarios we mentioned to show you how we use Chaos Mesh in Apache APISIX.",
      "source_content_hash": "dbfed7c15cb640ab641bcf395fac89b09147ecf4e6f76c38a79ef924e3f6990a",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "zh-hant": "現在，我們將透過前述兩個情境，展示如何在 Apache APISIX 中運用 Chaos Mesh。"
      },
      "invalid_translations": {}
    },
    {
      "segment_id": "54268405",
      "source_content": "### Scenario #1",
      "source_content_hash": "3e06562296a79c6fd6d2e75c96da1aae96caf35744070916e6840b8fe15f5e62",
      "node_type": "heading",
      "translatable": true,
      "translations": {
        "zh-hant": "### 情境一"
      },
      "invalid_translations": {}
    },
    {
      "segment_id": "8af76f3d",
      "source_content": "We deployed a Chaos Engineering experiment using the following steps:",
      "source_content_hash": "d81115080c16f7445f4728d67fffdddbeb8f6b7ab0d2c35f04f85bafa3b3bc6b",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "zh-hant": "我們透過以下步驟部署混沌工程實驗："
      },
      "invalid_translations": {}
    },
    {
      "segment_id": "def098da",
      "source_content": "1. We found metrics to measure whether Apache APISIX is running normally. In the test, the most important method is to use Grafana to monitor the Apache APISIX's running metrics. We extracted data from Prometheus in CI for comparison. Here, we used the routing and forwarding requests per second (RPS) and etcd connectivity as evaluation metrics. We analyzed the log. For Apache APISIX, we checked Nginx's error log to determine whether there was an error and whether the error was in line with our expectations.",
      "source_content_hash": "d22b21996051dd33fc631da0165ae6c36f519a19073de6f584e707f01d3cdb07",
      "node_type": "listItem",
      "translatable": true,
      "translations": {
        "zh-hant": "1. 確立衡量 Apache APISIX 運作是否正常的指標。實驗中最關鍵的方法是使用 Grafana 監控 Apache APISIX 運行指標。我們從 CI 中的 Prometheus 提取數據進行比對，採用路由轉發請求每秒處理量（RPS）和 etcd 連線狀態作為評估指標。同時分析日誌：針對 Apache APISIX，我們檢查 Nginx 錯誤日誌以判斷是否存在錯誤，以及錯誤是否符合預期。"
      },
      "invalid_translations": {}
    },
    {
      "segment_id": "b1573599",
      "source_content": "2. We performed a test in the control group. We found that both `create route` and `access route` were successful, and we could connect to etcd. We recorded the RPS.",
      "source_content_hash": "0e03ad1a26923cc52610c84be81030c306a5d7a437aa769508d3d1162cac7d4d",
      "node_type": "listItem",
      "translatable": true,
      "translations": {
        "zh-hant": "2. 我們在控制組進行測試，發現 `create route` 和 `access route` 都成功執行，且能正常連接 etcd。我們記錄了 RPS 數據。"
      },
      "invalid_translations": {}
    },
    {
      "segment_id": "11f54993",
      "source_content": "3. We used network chaos to add a five second network latency and then retested. This time, `set route` failed, `get route` succeeded, etcd could be connected to, and RPS had no significant change compared to the previous experiment. The experiment met our expectations.",
      "source_content_hash": "c5a4625243699cc07162d05508367f77351187f223cc7097a8537d3d92e3d8e5",
      "node_type": "listItem",
      "translatable": true,
      "translations": {
        "zh-hant": "3. 我們使用網路混沌注入 5 秒網路延遲後重新測試。這次 `set route` 失敗，但 `get route` 成功，etcd 仍可連接，且 RPS 與前次實驗相比無顯著變化。實驗結果符合預期。"
      },
      "invalid_translations": {}
    },
    {
      "segment_id": "b36c6338",
      "source_content": "![High network latency occurs between etcd and Apache APISIX](/img/blog/high-network-latency-between-etcd-and-apache-apisix.jpg)",
      "source_content_hash": "79f26b504998b296ab4de177c3ab0aa4cc681ebe5d7ecb878d8f53ab75540924",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "zh-hant": "![etcd 與 Apache APISIX 之間發生高網路延遲](/img/blog/high-network-latency-between-etcd-and-apache-apisix.jpg)"
      },
      "invalid_translations": {}
    },
    {
      "segment_id": "2c1b51df",
      "source_content": "### Scenario #2",
      "source_content_hash": "8ca92affc652ca3d28493685b9f7370f57d243b03fa196511495c0a8bc29a63b",
      "node_type": "heading",
      "translatable": true,
      "translations": {
        "zh-hant": "### 場景 #2"
      },
      "invalid_translations": {}
    },
    {
      "segment_id": "e536ea0d",
      "source_content": "After we conducted the same experiment as above in the control group, we introduced pod-kill chaos and reproduced the expected error. When we randomly deleted a small number of etcd nodes in the cluster, sometimes APISIX could connect to etcd and sometimes not, and the log printed a large number of connection rejection errors.",
      "source_content_hash": "8bae49bb8d694463c27b197e78f5227140b463be115fe5fc870f309b43526a2c",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "zh-hant": "在控制組重複前述實驗後，我們注入 pod-kill 混沌並重現預期錯誤。隨機刪除 etcd 叢集中少量節點時，APISIX 有時能連接 etcd 有時失敗，日誌出現大量連線拒絕錯誤。"
      },
      "invalid_translations": {}
    },
    {
      "segment_id": "40158b4b",
      "source_content": "When we deleted the first or third node in the etcd endpoint list, the `set route` returned a result normally. However, when we deleted the second node in the list, the `set route` returned the error \"connection refused.\"",
      "source_content_hash": "5b5a03ca5251bbe284c387d3b47e0325e15918fe6031d75f15445ae1bed7de2d",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "zh-hant": "當刪除 etcd 端點列表中第一或第三個節點時，`set route` 正常返回結果；但刪除列表中第二個節點時，`set route` 返回 \"connection refused\" 錯誤。"
      },
      "invalid_translations": {}
    },
    {
      "segment_id": "6ea4c715",
      "source_content": "Our troubleshooting revealed that the etcd Lua API used by Apache APISIX selected the endpoint sequentially, not randomly. Therefore, when we created an etcd client, we bound to only one etcd endpoint. This led to continuous failure.",
      "source_content_hash": "1e4546f5809a9eec3ca513cfa0b183a3c2a9c433b8ff68f5ebedcf43928d57ff",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "zh-hant": "排查發現 Apache APISIX 使用的 etcd Lua API 採用順序選擇端點而非隨機機制。因此建立 etcd 客戶端時，僅綁定單一 etcd 端點，導致持續失敗。"
      },
      "invalid_translations": {}
    },
    {
      "segment_id": "79ad944d",
      "source_content": "After we fixed this problem, we added a health check to the etcd Lua API to ensure that a large number of requests would not be sent to the disconnected etcd node. To avoid flooding the log with errors, we added a fallback mechanism when the etcd cluster was completely disconnected.",
      "source_content_hash": "261f0aa01a1ee63a905b04b440562dac1f62f335dc9d3b2ace3441a557ba96ed",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "zh-hant": "修復此問題後，我們在 etcd Lua API 加入健康檢查機制，確保大量請求不會發往已斷線的 etcd 節點。同時新增後備機制，避免 etcd 叢集完全斷線時日誌被錯誤訊息淹沒。"
      },
      "invalid_translations": {}
    },
    {
      "segment_id": "531437ca",
      "source_content": "![Error Reported from etcd Node Interaction](/img/blog/error-reported-from-etcd-node-interaction.jpg)",
      "source_content_hash": "07e4f7ad1c090f866279dca8ddb99b043a101d19f9a1cf5f6001429716cdb3a5",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "zh-hant": "![etcd 節點互動回報錯誤](/img/blog/error-reported-from-etcd-node-interaction.jpg)"
      },
      "invalid_translations": {}
    },
    {
      "segment_id": "bd92edfc",
      "source_content": "## Our future plans",
      "source_content_hash": "c89b7d8f123e307490efca1f7e75ae341277b66c635fb896c680236d68a5ef35",
      "node_type": "heading",
      "translatable": true,
      "translations": {
        "zh-hant": "## 未來規劃"
      },
      "invalid_translations": {}
    },
    {
      "segment_id": "ee8401db",
      "source_content": "### Run a chaos test in E2E simulation scenarios",
      "source_content_hash": "69447b998a65c729575c5ec6a1bab5330a6346318d44969ceb9e31573451c4cc",
      "node_type": "heading",
      "translatable": true,
      "translations": {
        "zh-hant": "### 在 E2E 模擬場景執行混沌測試"
      },
      "invalid_translations": {}
    },
    {
      "segment_id": "147e8550",
      "source_content": "In Apache APISIX, we manually identify system weaknesses for testing and repair. As in the open source community, we test in CI, so we don't need to worry about the impact of Chaos Engineering's failure radius on the production environment. But the test cannot cover complicated and comprehensive application scenarios in the production environment.",
      "source_content_hash": "f35aebd68e6e6dc88dabec9b68005556f744ea0764c65918edc658093d97b527",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "zh-hant": "目前 Apache APISIX 採手動識別系統弱點進行測試修復。雖在 CI 環境測試無需擔憂混沌工程影響生產環境，但仍無法覆蓋生產環境中複雜全面的應用場景。"
      },
      "invalid_translations": {}
    },
    {
      "segment_id": "883231d4",
      "source_content": "To cover more scenarios, the community plans to use the existing E2E test to simulate more complete scenarios and conduct chaos tests that are more random and cover a larger range.",
      "source_content_hash": "8f12f4c909b9d58b2df25dc3162599be6184873ada5842f029966bac3123f5a9",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "zh-hant": "為涵蓋更多場景，社群計劃運用現有 E2E 測試框架模擬更完整場景，執行隨機性更高、覆蓋範圍更廣的混沌測試。"
      },
      "invalid_translations": {}
    },
    {
      "segment_id": "b051b70c",
      "source_content": "### Add chaos tests to more Apache APISIX projects",
      "source_content_hash": "c84bb53f6db65d5b715cb13b4221301b1dc94951f83d35a824fd065c4d057dfa",
      "node_type": "heading",
      "translatable": true,
      "translations": {
        "zh-hant": "### 將混沌測試擴展至更多 Apache APISIX 專案"
      },
      "invalid_translations": {}
    },
    {
      "segment_id": "d0dd855b",
      "source_content": "In addition to finding more vulnerabilities for Apache APISIX, the community plans to add chaos tests to more projects such as Apache APISIX Dashboard and Apache APISIX Ingress Controller.",
      "source_content_hash": "95f4b5ad6b084afce0905e93cc64400290b5e9efdbbf755af909abf272c39275",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "zh-hant": "除持續為 Apache APISIX 挖掘漏洞外，社群計劃將混沌測試導入更多專案，如 Apache APISIX Dashboard 與 Apache APISIX Ingress Controller。"
      },
      "invalid_translations": {}
    },
    {
      "segment_id": "2fd0be2a",
      "source_content": "### Add features to Chaos Mesh",
      "source_content_hash": "d674f0ae1949bdd9c556443e8d46c7f6ec74250a09c87394edb6380e84784a84",
      "node_type": "heading",
      "translatable": true,
      "translations": {
        "zh-hant": "### 為 Chaos Mesh 新增功能"
      },
      "invalid_translations": {}
    },
    {
      "segment_id": "6270d577",
      "source_content": "When we deployed Chaos Mesh, some features were temporarily unsupported. For example, we couldn't select a service as a network latency target or specify container port injection as network chaos. In the future, the Apache APISIX community will assist Chaos Mesh to add related features.",
      "source_content_hash": "f456c0f9c7ab6e1ecaff2bc1926a4e582e5a076561ba3dc7ddc2031cdac11b9c",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "zh-hant": "部署 Chaos Mesh 時，部分功能暫未支援，例如無法選擇服務作為網路延遲目標，或指定容器連接埠注入網路混沌。未來 Apache APISIX 社群將協助 Chaos Mesh 新增相關功能。"
      },
      "invalid_translations": {}
    },
    {
      "segment_id": "a1fa5396",
      "source_content": "You're welcome to contribute to the [Apache APISIX project](https://github.com/apache/apisix) on GitHub. If you are interested in Chaos Mesh and would like to improve it, join our [Slack channel](https://slack.cncf.io/) (#project-chaos-mesh) or submit your pull requests or issues to our [GitHub repository](https://github.com/chaos-mesh/chaos-mesh).",
      "source_content_hash": "4f867acf76782b742f7d9c284f9ebcd072a073f5f3725bfe5045883a824feabd",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "zh-hant": "歡迎至 GitHub 貢獻 [Apache APISIX 專案](https://github.com/apache/apisix)。若對 Chaos Mesh 感興趣並希望改進，請加入 [Slack 頻道](https://slack.cncf.io/) (#project-chaos-mesh) 或提交 PR/issue 至 [GitHub 儲存庫](https://github.com/chaos-mesh/chaos-mesh)。"
      },
      "invalid_translations": {}
    }
  ],
  "target_i18n_subpath": "docusaurus-plugin-content-blog/2021-08-20-chaos-mesh-apisix.md",
  "last_updated_timestamp": "2025-07-04T06:49:56.108088+00:00",
  "schema_version": "1.0",
  "translated_versions": {
    "zh-hant": "3e38174fd8f09264e24a8d2c6bd020900ff9ad1476b3ad2c6f31b2aba6dddd21"
  }
}