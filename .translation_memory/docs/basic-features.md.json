{
  "source_file_path_relative_to_docusaurus_root": "docs/basic-features.md",
  "source_file_content_hash": "aa8bd988d8763c9820ee81cf8625b47e4d98f0f804bde3ae7cb7d9e8955a47f7",
  "segments": [
    {
      "segment_id": "58cfcc64",
      "source_content": "---\ntitle: Basic Features\n---",
      "source_content_hash": "6af9ac9e4e354187a693f7160df44babdc3becf81c40c1d933d108a790132efa",
      "node_type": "yaml",
      "translatable": false,
      "translations": {
        "zh-hant": "@@untranslatable_placeholder_58cfcc64"
      },
      "invalid_translations": {}
    },
    {
      "segment_id": "e7ec8f99",
      "source_content": "This document describes the basic features of Chaos Mesh, including [fault injection](#fault-injection), [Chaos workflows](#chaos-workflows), [visualized operations](#visualized-operations), and [security guarantees](#security-guarantees).",
      "source_content_hash": "d0bff3b47856e6a65f92b6cab4a59736ebdc38d7fff55b9c81034e4eb7b3bb8c",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "zh-hant": "本文件描述 Chaos Mesh 的基本功能，包括[故障注入](#fault-injection)、[混沌工作流程](#chaos-workflows)、[可視化操作](#visualized-operations)以及[安全保證](#security-guarantees)。"
      },
      "invalid_translations": {}
    },
    {
      "segment_id": "a703643c",
      "source_content": "## Fault injection",
      "source_content_hash": "05c2fbfff9bb0f31b61b762df976ce9cca67ad750a16b01857ff6a8ba8a9de10",
      "node_type": "heading",
      "translatable": true,
      "translations": {
        "zh-hant": "## 故障注入"
      },
      "invalid_translations": {}
    },
    {
      "segment_id": "53eaf0e1",
      "source_content": "Fault injection is the key of Chaos experiments. Chaos Mesh covers a full range of faults that might occur in a distributed system, and provides three comprehensive and fine-grained fault types: basic resource faults, platform faults, and application-layer faults.",
      "source_content_hash": "865cea94e36362a960a343f0ba3c487a5e67cdbbfdf762b8257e6c5de6b053c8",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "zh-hant": "故障注入是混沌實驗的核心。Chaos Mesh 涵蓋分散式系統中可能發生的各類故障，提供三種全面且細粒度的故障類型：基礎資源故障、平台故障和應用層故障。"
      },
      "invalid_translations": {}
    },
    {
      "segment_id": "760d111a",
      "source_content": "- Basic resource faults:\n  - [PodChaos](simulate-pod-chaos-on-kubernetes.md): simulates Pod failures, such as Pod node restart, Pod's persistent unavailability, and certain container failures in a specific Pod.\n  - [NetworkChaos](simulate-network-chaos-on-kubernetes.md): simulates network failures, such as network latency, packet loss, packet disorder, and network partitions.\n  - [DNSChaos](simulate-dns-chaos-on-kubernetes.md): simulates DNS failures, such as the parsing failure of DNS domain name and the wrong IP address returned.\n  - [HTTPChaos](simulate-http-chaos-on-kubernetes.md): simulates HTTP communication failures, such as HTTP communication latency.\n  - [StressChaos](simulate-heavy-stress-on-kubernetes.md): simulates CPU race or memory race.\n  - [IOChaos](simulate-io-chaos-on-kubernetes.md): simulates the I/O failure of an application file, such as I/O delays, read and write failures.\n  - [TimeChaos](simulate-time-chaos-on-kubernetes.md): simulates the time jump exception.\n  - [KernelChaos](simulate-kernel-chaos-on-kubernetes.md): simulates kernel failures, such as an exception of the application memory allocation.",
      "source_content_hash": "850dc6907017463eec72197ae6aab7a42ec11771b285c06e690a87e155c1da71",
      "node_type": "listItem",
      "translatable": true,
      "translations": {
        "zh-hant": "- 基礎資源故障：\n  - [PodChaos](simulate-pod-chaos-on-kubernetes.md)：模擬 Pod 故障，例如 Pod 節點重啟、Pod 持續不可用，以及特定 Pod 中特定容器的故障。\n  - [NetworkChaos](simulate-network-chaos-on-kubernetes.md)：模擬網路故障，例如網路延遲、封包遺失、封包失序和網路分割。\n  - [DNSChaos](simulate-dns-chaos-on-kubernetes.md)：模擬 DNS 故障，例如 DNS 網域名稱解析失敗和返回錯誤的 IP 位址。\n  - [HTTPChaos](simulate-http-chaos-on-kubernetes.md)：模擬 HTTP 通訊故障，例如 HTTP 通訊延遲。\n  - [StressChaos](simulate-heavy-stress-on-kubernetes.md)：模擬 CPU 競爭或記憶體競爭。\n  - [IOChaos](simulate-io-chaos-on-kubernetes.md)：模擬應用程式檔案的 I/O 故障，例如 I/O 延遲、讀寫失敗。\n  - [TimeChaos](simulate-time-chaos-on-kubernetes.md)：模擬時間跳躍異常。\n  - [KernelChaos](simulate-kernel-chaos-on-kubernetes.md)：模擬核心故障，例如應用程式記憶體分配異常。"
      },
      "invalid_translations": {}
    },
    {
      "segment_id": "2dc10b09",
      "source_content": "- Platform faults:\n  - [AWSChaos](simulate-aws-chaos.md): simulates AWS platform failures, such as the AWS node restart.\n  - [GCPChaos](simulate-gcp-chaos.md): simulates GCP platform failures, such as the GCP node restart.",
      "source_content_hash": "144543cc2270904007a8098deb1f312d36e85b913ae0b5eee5fc5a077dca993d",
      "node_type": "listItem",
      "translatable": true,
      "translations": {
        "zh-hant": "- 平台故障：\n  - [AWSChaos](simulate-aws-chaos.md)：模擬 AWS 平台故障，例如 AWS 節點重啟。\n  - [GCPChaos](simulate-gcp-chaos.md)：模擬 GCP 平台故障，例如 GCP 節點重啟。"
      },
      "invalid_translations": {}
    },
    {
      "segment_id": "8b31a2bd",
      "source_content": "- Application faults:\n  - [JVMChaos](simulate-jvm-application-chaos.md): simulates JVM application failures, such as the function call delay.",
      "source_content_hash": "6902604ec40ecfc67ba14893b9d8de97ee47d1c42b555eac1c825df0eebc446d",
      "node_type": "listItem",
      "translatable": true,
      "translations": {
        "zh-hant": "- 應用層故障：\n  - [JVMChaos](simulate-jvm-application-chaos.md)：模擬 JVM 應用程式故障，例如函式呼叫延遲。"
      },
      "invalid_translations": {}
    },
    {
      "segment_id": "79b2d0b9",
      "source_content": "## Chaos workflows",
      "source_content_hash": "da3b4b329f6dff6ee101402d2060c95bb9e52987a1147776f4af365cb0e5f2c0",
      "node_type": "heading",
      "translatable": true,
      "translations": {
        "zh-hant": "## 混沌工作流程"
      },
      "invalid_translations": {}
    },
    {
      "segment_id": "d9172fa4",
      "source_content": "A Chaos workflow includes a set of Chaos experiments and an application status check, so you can complete the entire process of a Chaos engineering project on the platform.",
      "source_content_hash": "7fc81a70f2e08ea634f04f5d9373baff3e95e6179f2cef20986d80e28fc50eab",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "zh-hant": "混沌工作流程包含一組混沌實驗和應用程式狀態檢查，讓您能在平台上完成混沌工程專案的完整流程。"
      },
      "invalid_translations": {}
    },
    {
      "segment_id": "26524352",
      "source_content": "Chaos workflows enable you to perform a series of Chaos experiments, keep expanding the explosion radius (including the scope of attacks), and increase the failure types. After running a Chaos workflow, you can easily view the current state of the application using Chaos Mesh and determine whether to perform follow-up experiments.At the same time, to reduce the cost of maintaining Chaos workflows, you can keep updating and accumulating the Chaos experiment workflows, and apply the existing experiments to other workflows.",
      "source_content_hash": "a9f23cdbb0602259e34b3799d1019d54e5fb6db01df60cb272976f5c9d4e103a",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "zh-hant": "混沌工作流程使您能執行一系列混沌實驗，持續擴大爆炸半徑（包括攻擊範圍）並增加故障類型。執行混沌工作流程後，您可透過 Chaos Mesh 輕鬆查看應用程式當前狀態，決定是否進行後續實驗。同時為降低維護混沌工作流程的成本，您可持續更新和累積混沌實驗工作流程，並將現有實驗應用於其他工作流程。"
      },
      "invalid_translations": {}
    },
    {
      "segment_id": "73ab96a3",
      "source_content": "Currently, Chaos workflows provide the following features:",
      "source_content_hash": "50853d8c67f12d578237959e203c7913166b295413380879899ad9afd7cff9c9",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "zh-hant": "目前混沌工作流程提供以下功能："
      },
      "invalid_translations": {}
    },
    {
      "segment_id": "c0463e48",
      "source_content": "- Orchestrate serial Chaos experiments",
      "source_content_hash": "6e536f0e25eee9b08e1878f7cd782f516b14337dc7ef06ca1ea2b5f15803d5ff",
      "node_type": "listItem",
      "translatable": true,
      "translations": {
        "zh-hant": "- 編排串列混沌實驗"
      },
      "invalid_translations": {}
    },
    {
      "segment_id": "2d89eb89",
      "source_content": "- Orchestrate parallel Chaos experiments",
      "source_content_hash": "19fdfdbac08f91e9fe9519b9fa2883439165a304e6bf830c894a204b0d5b42f3",
      "node_type": "listItem",
      "translatable": true,
      "translations": {
        "zh-hant": "- 編排並行混沌實驗"
      },
      "invalid_translations": {}
    },
    {
      "segment_id": "cc5346ac",
      "source_content": "- Support checking experimental status and results",
      "source_content_hash": "27b537e98d660582d0f3841b6cec3a4ff8da306bf8122b1ab244bc845fbd26a3",
      "node_type": "listItem",
      "translatable": true,
      "translations": {
        "zh-hant": "- 支援檢查實驗狀態和結果"
      },
      "invalid_translations": {}
    },
    {
      "segment_id": "aa355dc5",
      "source_content": "- Support pausing a Chaos experiment",
      "source_content_hash": "acadb82c19e37e7882f4299223cb30679b91da6842b95586c4c252717b6062c1",
      "node_type": "listItem",
      "translatable": true,
      "translations": {
        "zh-hant": "- 支援暫停混沌實驗"
      },
      "invalid_translations": {}
    },
    {
      "segment_id": "ec638a20",
      "source_content": "- Support using YAML files to define and manage Chaos workflows",
      "source_content_hash": "5c6498a02b359dbd1579e7f72c8cfd16449f4710c6448c955f2266c4a73dac71",
      "node_type": "listItem",
      "translatable": true,
      "translations": {
        "zh-hant": "- 支援使用 YAML 檔案定義和管理混沌工作流程"
      },
      "invalid_translations": {}
    },
    {
      "segment_id": "b49764d4",
      "source_content": "- Support using the web UI to define and manage Chaos workflows",
      "source_content_hash": "b4bbc2966053fa7bf3e49b0f3fca4d19b3f6f20f9b43e7a699284b28236d16c9",
      "node_type": "listItem",
      "translatable": true,
      "translations": {
        "zh-hant": "- 支援使用 Web UI 定義和管理混沌工作流程"
      },
      "invalid_translations": {}
    },
    {
      "segment_id": "3cfe6286",
      "source_content": "For the configuration of a specific workflow, see [Create Chaos Mesh workflow](create-chaos-mesh-workflow.md).",
      "source_content_hash": "3943c7eea83687743852db510db4557f648cd00dfc134a151ce35034c3e8248e",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "zh-hant": "特定工作流程的配置詳見[建立 Chaos Mesh 工作流程](create-chaos-mesh-workflow.md)。"
      },
      "invalid_translations": {}
    },
    {
      "segment_id": "06c0f776",
      "source_content": "## Visualized operations",
      "source_content_hash": "76c03b59837833f4a35a02ecd5de802fae150ba335cc652658aa5fb1dcb14d4b",
      "node_type": "heading",
      "translatable": true,
      "translations": {
        "zh-hant": "## 可視化操作"
      },
      "invalid_translations": {}
    },
    {
      "segment_id": "aa1e7006",
      "source_content": "Chaos Mesh provides the Chaos Dashboard component for visualized operations, which greatly simplifies Chaos experiments.You can manage and monitor a Chaos experiment directly through the visualization interface. For example, with a few clicks on the interface, you can define the scope of a Chaos experiment, specify the type of Chaos injection, define scheduling rules, and get the results of the Chaos experiment.",
      "source_content_hash": "015a7143c0d5f84a581cf3c6ca3fd15363644c61e61b2398e30d6229ecca960c",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "zh-hant": "Chaos Mesh 提供 Chaos Dashboard 元件實現可視化操作，大幅簡化混沌實驗流程。您可直接透過視覺化介面管理和監控混沌實驗，例如在介面上點擊幾下即可定義實驗範圍、指定混沌注入類型、設定排程規則並取得實驗結果。"
      },
      "invalid_translations": {}
    },
    {
      "segment_id": "13d9cd70",
      "source_content": "![Chaos workflow](img/dashboard-overview.png)",
      "source_content_hash": "699ad8d7d11d802b7213244df29ffdfc49a272a9bdb1de60161a453c6db543d8",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "zh-hant": "![混沌工作流程](img/dashboard-overview.png)"
      },
      "invalid_translations": {}
    },
    {
      "segment_id": "6f930b2f",
      "source_content": "## Security guarantees",
      "source_content_hash": "b101b95b69002fc5a84b7cee7e9dd75d29770ee8aa2df322dd7a8fc8d01bf524",
      "node_type": "heading",
      "translatable": true,
      "translations": {
        "zh-hant": "## 安全保證"
      },
      "invalid_translations": {}
    },
    {
      "segment_id": "c504c207",
      "source_content": "Chaos Mesh manages permissions using the native [RBAC](https://kubernetes.io/docs/reference/access-authn-authz/rbac/) feature in Kubernetes.",
      "source_content_hash": "83592ac64e4e0ef4ce93aae48a418c8049a408affbc640a5a6b9c67378cc0066",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "zh-hant": "Chaos Mesh 使用 Kubernetes 原生的 [RBAC](https://kubernetes.io/docs/reference/access-authn-authz/rbac/) 功能管理權限。"
      },
      "invalid_translations": {}
    },
    {
      "segment_id": "98d26038",
      "source_content": "You can freely create multiple roles based on your actual permission requirements, bind the roles to the username service account, and then generate the token corresponding to the service account.When you log into the Dashboard using this token, you can only perform Chaos experiments within the permissions given by the service account.",
      "source_content_hash": "eb83d92e2e1c62227dd5fc8fbcf9041d9a39d01c6f0a6060c6d70416b2ccfd5e",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "zh-hant": "您可以根據實際權限需求自由建立多個角色，將角色綁定至使用者名稱服務帳戶，並產生對應服務帳戶的 token。當您使用此 token 登入 Dashboard 時，僅能執行該服務帳戶權限範圍內的 Chaos 實驗。"
      },
      "invalid_translations": {}
    },
    {
      "segment_id": "d3649a1e",
      "source_content": "In addition, you can specify the namespaces that allow Chaos experiments by setting the namespace annotations, which further safeguards the control of Chaos experiments.",
      "source_content_hash": "debf436dd5b61d91b91cf4fa750e3fcac3a9fddf848d325ada9987c0f3650f8e",
      "node_type": "paragraph",
      "translatable": true,
      "translations": {
        "zh-hant": "此外，您可以透過設定命名空間註解 (namespace annotations) 來指定允許執行 Chaos 實驗的命名空間，進一步強化實驗控管的安全性。"
      },
      "invalid_translations": {}
    }
  ],
  "target_i18n_subpath": "docusaurus-plugin-content-docs/basic-features.md",
  "last_updated_timestamp": "2025-07-04T06:49:56.066906+00:00",
  "schema_version": "1.0",
  "translated_versions": {
    "zh-hant": "aa8bd988d8763c9820ee81cf8625b47e4d98f0f804bde3ae7cb7d9e8955a47f7"
  }
}